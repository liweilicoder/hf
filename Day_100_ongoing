Day1
单行注释 - 以#和空格开头的部分
多行注释 - 三个引号开头，三个引号结尾

Day2
在Python中可以使用type函数对变量的类型进行检查。
逻辑运算符有三个，分别是and、or和not
print('%.1f华氏度 = %.1f摄氏度' % (f, c))
print(f'{f:.1f}华氏度 = {c:.1f}摄氏度')
# 如果代码太长写成一行不便于阅读 可以使用\对代码进行折行
is_leap = year % 4 == 0 and year % 100 != 0 or \
          year % 400 == 0
          
Day3
Python中没有用花括号来构造代码块而是使用了缩进的方式来表示代码的层次结构，如果if条件成立的情况下需要执行多条语句，
只要保持多条语句具有相同的缩进就可以了。换句话说连续的代码如果又保持了相同的缩进那么它们属于同一个代码块，相当于是一个执行的整体。
  print('周长: %f' % (a + b + c))
    p = (a + b + c) / 2
    area = (p * (p - a) * (p - b) * (p - c)) ** 0.5
    print('面积: %f' % (area))

Day4
//左闭右开，默认从0开始
range(101)：可以用来产生0到100范围的整数，需要注意的是取不到101。
range(1, 101)：可以用来产生1到100范围的整数，相当于前面是闭区间后面是开区间。
range(1, 101, 2)：可以用来产生1到100的奇数，其中2是步长，即每次数值递增的值。
range(100, 0, -2)：可以用来产生100到1的偶数，其中-2是步长，即每次数字递减的值。
  print('%d*%d=%d' % (i, j, i * j), end='\t')
   
   # 通过下面的操作将y的值赋给x, 将x的值赋给y
    x, y = y, x

Day5
数字反转：
while num > 0:
    reversed_num = reversed_num * 10 + num % 10
    num //= 10

Python 可以这样写if
if 0 < debt <= money:
